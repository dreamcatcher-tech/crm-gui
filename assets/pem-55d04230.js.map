{"version":3,"file":"pem-55d04230.js","sources":["../../../../node_modules/es6-promisify/dist/promisify.js","../../../../node_modules/os-tmpdir/index.js","../../../../node_modules/pem/lib/helper.js","../../../../node_modules/isexe/windows.js","../../../../node_modules/isexe/mode.js","../../../../node_modules/isexe/index.js","../../../../node_modules/which/which.js","../../../../node_modules/pem/lib/openssl.js","../../../../node_modules/pem/lib/convert.js","../../../../node_modules/pem/lib/pem.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promisify = promisify;\n// Symbols is a better way to do this, but not all browsers have good support,\n// so instead we'll just make do with a very unlikely string.\nvar customArgumentsToken = \"__ES6-PROMISIFY--CUSTOM-ARGUMENTS__\";\n/**\n * promisify()\n * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) --\n * into an ES6-compatible Promise. Promisify provides a default callback of the\n * form (error, result) and rejects when `error` is truthy.\n *\n * @param {function} original - The function to promisify\n * @return {function} A promisified version of `original`\n */\n\nfunction promisify(original) {\n  // Ensure the argument is a function\n  if (typeof original !== \"function\") {\n    throw new TypeError(\"Argument to promisify must be a function\");\n  } // If the user has asked us to decode argument names for them, honour that\n\n\n  var argumentNames = original[customArgumentsToken]; // If the user has supplied a custom Promise implementation, use it.\n  // Otherwise fall back to whatever we can find on the global object.\n\n  var ES6Promise = promisify.Promise || Promise; // If we can find no Promise implemention, then fail now.\n\n  if (typeof ES6Promise !== \"function\") {\n    throw new Error(\"No Promise implementation found; do you need a polyfill?\");\n  }\n\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new ES6Promise(function (resolve, reject) {\n      // Append the callback bound to the context\n      args.push(function callback(err) {\n        if (err) {\n          return reject(err);\n        }\n\n        for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          values[_key2 - 1] = arguments[_key2];\n        }\n\n        if (values.length === 1 || !argumentNames) {\n          return resolve(values[0]);\n        }\n\n        var o = {};\n        values.forEach(function (value, index) {\n          var name = argumentNames[index];\n\n          if (name) {\n            o[name] = value;\n          }\n        });\n        resolve(o);\n      }); // Call the function.\n\n      original.apply(_this, args);\n    });\n  };\n} // Attach this symbol to the exported function, so users can use it\n\n\npromisify.argumentNames = customArgumentsToken;\npromisify.Promise = undefined; // Export the public API","'use strict';\nvar isWindows = process.platform === 'win32';\nvar trailingSlashRe = isWindows ? /[^:]\\\\$/ : /.\\/$/;\n\n// https://github.com/nodejs/node/blob/3e7a14381497a3b73dda68d05b5130563cdab420/lib/os.js#L25-L43\nmodule.exports = function () {\n\tvar path;\n\n\tif (isWindows) {\n\t\tpath = process.env.TEMP ||\n\t\t\tprocess.env.TMP ||\n\t\t\t(process.env.SystemRoot || process.env.windir) + '\\\\temp';\n\t} else {\n\t\tpath = process.env.TMPDIR ||\n\t\t\tprocess.env.TMP ||\n\t\t\tprocess.env.TEMP ||\n\t\t\t'/tmp';\n\t}\n\n\tif (trailingSlashRe.test(path)) {\n\t\tpath = path.slice(0, -1);\n\t}\n\n\treturn path;\n};\n","'use strict'\r\n\r\nvar pathlib = require('path')\r\nvar fs = require('fs')\r\nvar crypto = require('crypto')\r\nvar osTmpdir = require('os-tmpdir')\r\nvar tempDir = process.env.PEMJS_TMPDIR || osTmpdir()\r\n\r\n/**\r\n * pem helper module\r\n *\r\n * @module helper\r\n */\r\n\r\n/**\r\n * helper function to check is the string a number or not\r\n * @param {String} str String that should be checked to be a number\r\n */\r\nmodule.exports.isNumber = function (str) {\r\n  if (Array.isArray(str)) {\r\n    return false\r\n  }\r\n  /*\r\n  var bstr = str && str.toString()\r\n  str = str + ''\r\n\r\n  return bstr - parseFloat(bstr) + 1 >= 0 &&\r\n          !/^\\s+|\\s+$/g.test(str) && /^\\d+$/g.test(str) &&\r\n          !isNaN(str) && !isNaN(parseFloat(str))\r\n  */\r\n  return /^\\d+$/g.test(str)\r\n}\r\n\r\n/**\r\n * helper function to check is the string a hexaceximal value\r\n * @param {String} hex String that should be checked to be a hexaceximal\r\n */\r\nmodule.exports.isHex = function isHex (hex) {\r\n  return /^(0x){0,1}([0-9A-F]{1,40}|[0-9A-F]{1,40})$/gi.test(hex)\r\n}\r\n\r\n/**\r\n * helper function to convert a string to a hexaceximal value\r\n * @param {String} str String that should be converted to a hexaceximal\r\n */\r\nmodule.exports.toHex = function toHex (str) {\r\n  var hex = ''\r\n  for (var i = 0; i < str.length; i++) {\r\n    hex += '' + str.charCodeAt(i).toString(16)\r\n  }\r\n  return hex\r\n}\r\n\r\n// cipherPassword returns an array of supported ciphers.\r\n/**\r\n * list of supported ciphers\r\n * @type {Array}\r\n */\r\nmodule.exports.ciphers = ['aes128', 'aes192', 'aes256', 'camellia128', 'camellia192', 'camellia256', 'des', 'des3', 'idea']\r\nvar ciphers = module.exports.ciphers\r\n\r\n/**\r\n * Creates a PasswordFile to hide the password form process infos via `ps auxf` etc.\r\n * @param {Object} options object of cipher, password and passType, mustPass, {cipher:'aes128', password:'xxxx', passType:\"in/out/word\"}, if the object empty we do nothing\r\n * @param {String} options.cipher cipher like 'aes128', 'aes192', 'aes256', 'camellia128', 'camellia192', 'camellia256', 'des', 'des3', 'idea'\r\n * @param {String} options.password password can be empty or at last 4 to 1023 chars\r\n * @param {String} options.passType passType: can be in/out/word for passIN/passOUT/passWORD\r\n * @param {Boolean} options.mustPass mustPass is used when you need to set the pass like as \"-password pass:\" most needed when empty password\r\n * @param {Object} params params will be extended with the data that need for the openssl command. IS USED AS POINTER!\r\n * @param {String} PasswordFileArray PasswordFileArray is an array of filePaths that later need to deleted ,after the openssl command. IS USED AS POINTER!\r\n * @return {Boolean} result\r\n */\r\nmodule.exports.createPasswordFile = function (options, params, PasswordFileArray) {\r\n  if (!options || !Object.prototype.hasOwnProperty.call(options, 'password') || !Object.prototype.hasOwnProperty.call(options, 'passType') || !/^(word|in|out)$/.test(options.passType)) {\r\n    return false\r\n  }\r\n  var PasswordFile = pathlib.join(tempDir, crypto.randomBytes(20).toString('hex'))\r\n  PasswordFileArray.push(PasswordFile)\r\n  options.password = options.password.trim()\r\n  if (options.password === '') {\r\n    options.mustPass = true\r\n  }\r\n  if (options.cipher && (ciphers.indexOf(options.cipher) !== -1)) {\r\n    params.push('-' + options.cipher)\r\n  }\r\n  params.push('-pass' + options.passType)\r\n  if (options.mustPass) {\r\n    params.push('pass:' + options.password)\r\n  } else {\r\n    fs.writeFileSync(PasswordFile, options.password)\r\n    params.push('file:' + PasswordFile)\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Deletes a file or an array of files\r\n * @param {Array} files array of files that shoudld be deleted\r\n * @param {errorCallback} callback Callback function with an error object\r\n */\r\nmodule.exports.deleteTempFiles = function (files, callback) {\r\n  var rmFiles = []\r\n  if (typeof files === 'string') {\r\n    rmFiles.push(files)\r\n  } else if (Array.isArray(files)) {\r\n    rmFiles = files\r\n  } else {\r\n    return callback(new Error('Unexcepted files parameter type; only string or array supported'))\r\n  }\r\n  var deleteSeries = function (list, finalCallback) {\r\n    if (list.length) {\r\n      var file = list.shift()\r\n      var myCallback = function (err) {\r\n        if (err && err.code === 'ENOENT') {\r\n          // file doens't exist\r\n          return deleteSeries(list, finalCallback)\r\n        } else if (err) {\r\n          // other errors, e.g. maybe we don't have enough permission\r\n          return finalCallback(err)\r\n        } else {\r\n          return deleteSeries(list, finalCallback)\r\n        }\r\n      }\r\n      if (file && typeof file === 'string') {\r\n        fs.unlink(file, myCallback)\r\n      } else {\r\n        return deleteSeries(list, finalCallback)\r\n      }\r\n    } else {\r\n      return finalCallback(null) // no errors\r\n    }\r\n  }\r\n  deleteSeries(rmFiles, callback)\r\n}\r\n/**\r\n * Callback for return an error object.\r\n * @callback errorCallback\r\n * @param {Error} err - An Error Object or null\r\n */\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n","var helper = require('./helper.js')\nvar cpspawn = require('child_process').spawn\nvar pathlib = require('path')\nvar fs = require('fs')\nvar osTmpdir = require('os-tmpdir')\nvar crypto = require('crypto')\nvar which = require('which')\nvar settings = {}\nvar tempDir = process.env.PEMJS_TMPDIR || osTmpdir()\n\n/**\n * pem openssl module\n *\n * @module openssl\n */\n\n/**\n * configue this openssl module\n *\n * @static\n * @param {String} option name e.g. pathOpenSSL, openSslVersion; TODO rethink nomenclature\n * @param {*} value value\n */\nfunction set (option, value) {\n  settings[option] = value\n}\n\n/**\n * get configuration setting value\n *\n * @static\n * @param {String} option name\n */\nfunction get (option) {\n  return settings[option] || null\n}\n\n/**\n * Spawn an openssl command\n *\n * @static\n * @param {Array} params Array of openssl command line parameters\n * @param {String} searchStr String to use to find data\n * @param {Array} [tmpfiles] list of temporary files\n * @param {Function} callback Called with (error, stdout-substring)\n */\nfunction exec (params, searchStr, tmpfiles, callback) {\n  if (!callback && typeof tmpfiles === 'function') {\n    callback = tmpfiles\n    tmpfiles = false\n  }\n\n  spawnWrapper(params, tmpfiles, function (err, code, stdout, stderr) {\n    var start, end\n\n    if (err) {\n      return callback(err)\n    }\n\n    if ((start = stdout.match(new RegExp('\\\\-+BEGIN ' + searchStr + '\\\\-+$', 'm')))) {\n      start = start.index\n    } else {\n      start = -1\n    }\n\n    // To get the full EC key with parameters and private key\n    if (searchStr === 'EC PARAMETERS') {\n      searchStr = 'EC PRIVATE KEY'\n    }\n\n    if ((end = stdout.match(new RegExp('^\\\\-+END ' + searchStr + '\\\\-+', 'm')))) {\n      end = end.index + end[0].length\n    } else {\n      end = -1\n    }\n\n    if (start >= 0 && end >= 0) {\n      return callback(null, stdout.substring(start, end))\n    } else {\n      return callback(new Error(searchStr + ' not found from openssl output:\\n---stdout---\\n' + stdout + '\\n---stderr---\\n' + stderr + '\\ncode: ' + code))\n    }\n  })\n}\n\n/**\n *  Spawn an openssl command and get binary output\n *\n * @static\n * @param {Array} params Array of openssl command line parameters\n * @param {Array} [tmpfiles] list of temporary files\n * @param {Function} callback Called with (error, stdout)\n*/\nfunction execBinary (params, tmpfiles, callback) {\n  if (!callback && typeof tmpfiles === 'function') {\n    callback = tmpfiles\n    tmpfiles = false\n  }\n  spawnWrapper(params, tmpfiles, true, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    }\n    return callback(null, stdout)\n  })\n}\n\n/**\n * Generically spawn openSSL, without processing the result\n *\n * @static\n * @param {Array}        params   The parameters to pass to openssl\n * @param {Boolean}      binary   Output of openssl is binary or text\n * @param {Function}     callback Called with (error, exitCode, stdout, stderr)\n */\nfunction spawn (params, binary, callback) {\n  var pathBin = get('pathOpenSSL') || process.env.OPENSSL_BIN || 'openssl'\n\n  testOpenSSLPath(pathBin, function (err) {\n    if (err) {\n      return callback(err)\n    }\n    var openssl = cpspawn(pathBin, params)\n    var stderr = ''\n\n    var stdout = (binary ? Buffer.alloc(0) : '')\n    openssl.stdout.on('data', function (data) {\n      if (!binary) {\n        stdout += data.toString('binary')\n      } else {\n        stdout = Buffer.concat([stdout, data])\n      }\n    })\n\n    openssl.stderr.on('data', function (data) {\n      stderr += data.toString('binary')\n    })\n    // We need both the return code and access to all of stdout.  Stdout isn't\n    // *really* available until the close event fires; the timing nuance was\n    // making this fail periodically.\n    var needed = 2 // wait for both exit and close.\n    var code = -1\n    var finished = false\n    var done = function (err) {\n      if (finished) {\n        return\n      }\n\n      if (err) {\n        finished = true\n        return callback(err)\n      }\n\n      if (--needed < 1) {\n        finished = true\n        if (code) {\n          if (code === 2 && (stderr === '' || /depth lookup: unable to/.test(stderr))) {\n            return callback(null, code, stdout, stderr)\n          }\n          return callback(new Error('Invalid openssl exit code: ' + code + '\\n% openssl ' + params.join(' ') + '\\n' + stderr), code)\n        } else {\n          return callback(null, code, stdout, stderr)\n        }\n      }\n    }\n\n    openssl.on('error', done)\n\n    openssl.on('exit', function (ret) {\n      code = ret\n      done()\n    })\n\n    openssl.on('close', function () {\n      stdout = (binary ? stdout : Buffer.from(stdout, 'binary').toString('utf-8'))\n      stderr = Buffer.from(stderr, 'binary').toString('utf-8')\n      done()\n    })\n  })\n}\n\n/**\n * Wrapper for spawn method\n *\n * @static\n * @param {Array} params The parameters to pass to openssl\n * @param {Array} [tmpfiles] list of temporary files\n * @param {Boolean} [binary] Output of openssl is binary or text\n * @param {Function} callback Called with (error, exitCode, stdout, stderr)\n */\nfunction spawnWrapper (params, tmpfiles, binary, callback) {\n  if (!callback && typeof binary === 'function') {\n    callback = binary\n    binary = false\n  }\n\n  var files = []\n  var delTempPWFiles = []\n\n  if (tmpfiles) {\n    tmpfiles = [].concat(tmpfiles)\n    var fpath, i\n    for (i = 0; i < params.length; i++) {\n      if (params[i] === '--TMPFILE--') {\n        fpath = pathlib.join(tempDir, crypto.randomBytes(20).toString('hex'))\n        files.push({\n          path: fpath,\n          contents: tmpfiles.shift()\n        })\n        params[i] = fpath\n        delTempPWFiles.push(fpath)\n      }\n    }\n  }\n\n  var file\n  for (i = 0; i < files.length; i++) {\n    file = files[i]\n    fs.writeFileSync(file.path, file.contents)\n  }\n\n  spawn(params, binary, function (err, code, stdout, stderr) {\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      callback(err || fsErr, code, stdout, stderr)\n    })\n  })\n}\n\n/**\n * Validates the pathBin for the openssl command\n *\n * @private\n * @param {String} pathBin The path to OpenSSL Bin\n * @param {Function} callback Callback function with an error object\n */\nfunction testOpenSSLPath (pathBin, callback) {\n  which(pathBin, function (error) {\n    if (error) {\n      return callback(new Error('Could not find openssl on your system on this path: ' + pathBin))\n    }\n    callback()\n  })\n}\n\n/* Once PEM is imported, the openSslVersion is set with this function. */\nspawn(['version'], false, function (err, code, stdout, stderr) {\n  var text = String(stdout) + '\\n' + String(stderr) + '\\n' + String(err)\n  var tmp = text.match(/^LibreSSL/i)\n  set('openSslVersion', (tmp && tmp[0] ? 'LibreSSL' : 'openssl').toUpperCase())\n})\n\nmodule.exports = {\n  exec: exec,\n  execBinary: execBinary,\n  spawn: spawn,\n  spawnWrapper: spawnWrapper,\n  set: set,\n  get: get\n}\n","'use strict'\n\nvar openssl = require('./openssl.js')\nvar helper = require('./helper.js')\n\n// PEM format: .pem, .crt, .cer (!bin), .key\n// base64 encoded; the cert file might also include the private key; so key file is optional\n\n// DER format: .der, .cer (bin)\n// binary encoded format; cannot include key file\n\n// PKCS#7 / P7B format: .p7b, .p7c\n// contains cert and ca chain cert files, but not the key file\n// A PKCS7 certificate is serialized using either PEM or DER format.\n\n// PKCS#12 / PFX format: .pfx, .p12\n// contains all files: key file, cert and ca chain cert files\n\n/**\n * pem convert module\n *\n * @module convert\n */\n\n/**\n * conversion from PEM to DER format\n * if private key is included in PEM encoded file, it won't be included in DER file\n * use this method with type 'rsa' to export private key in that case\n * @param  {String} pathIN  path of the PEM encoded certificate file\n * @param  {String} pathOUT path of the DER encoded certificate file to generate\n * @param  {String} [type] type of file, use 'rsa' for key file, 'x509' otherwise or leave this parameter out\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PEM2DER = function (pathIN, pathOUT, type, callback) {\n  if (!callback && typeof type === 'function') {\n    callback = type\n    type = 'x509'\n  }\n  var params = [\n    type,\n    '-outform',\n    'der',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}\n\n/**\n * conversion from DER to PEM format\n * @param  {String} pathIN  path of the DER encoded certificate file\n * @param  {String} pathOUT path of the PEM encoded certificate file to generate\n * @param  {String} [type] type of file, use 'rsa' for key file, 'x509' otherwise or leave this parameter out\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.DER2PEM = function (pathIN, pathOUT, type, callback) {\n  if (!callback && typeof type === 'function') {\n    callback = type\n    type = 'x509'\n  }\n  var params = [\n    type,\n    '-inform',\n    'der',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}\n\n/**\n * conversion from PEM to P7B format\n * @param  {Object} pathBundleIN  paths of the PEM encoded certificate files ({cert: '...', ca: '...' or ['...', ...]})\n * @param  {String} pathOUT path of the P7B encoded certificate file to generate\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PEM2P7B = function (pathBundleIN, pathOUT, callback) {\n  var params = [\n    'crl2pkcs7',\n    '-nocrl',\n    '-certfile',\n    pathBundleIN.cert,\n    '-out',\n    pathOUT\n  ]\n  if (pathBundleIN.ca) {\n    if (!Array.isArray(pathBundleIN.ca)) {\n      pathBundleIN.ca = [pathBundleIN.ca]\n    }\n    pathBundleIN.ca.forEach(function (ca) {\n      params.push('-certfile')\n      params.push(ca)\n    })\n  }\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}\n\n/**\n * conversion from P7B to PEM format\n * @param  {String} pathIN  path of the P7B encoded certificate file\n * @param  {String} pathOUT path of the PEM encoded certificate file to generate\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.P7B2PEM = function (pathIN, pathOUT, callback) {\n  var params = [\n    'pkcs7',\n    '-print_certs',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      callback(null, code === 0)\n    }\n  })\n}// TODO: CA also included?\n\n/**\n * conversion from PEM to PFX\n * @param  {Object} pathBundleIN paths of the PEM encoded certificate files ({cert: '...', key: '...', ca: '...' or ['...', ...]})\n * @param  {String} pathOUT path of the PFX encoded certificate file to generate\n * @param  {String} password password to set for accessing the PFX file\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PEM2PFX = function (pathBundleIN, pathOUT, password, callback) {\n  var params = [\n    'pkcs12',\n    '-export',\n    '-out',\n    pathOUT,\n    '-inkey',\n    pathBundleIN.key,\n    '-in',\n    pathBundleIN.cert\n  ]\n  if (pathBundleIN.ca) {\n    if (!Array.isArray(pathBundleIN.ca)) {\n      pathBundleIN.ca = [pathBundleIN.ca]\n    }\n    pathBundleIN.ca.forEach(function (ca) {\n      params.push('-certfile')\n      params.push(ca)\n    })\n  }\n  var delTempPWFiles = []\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'out' }, params, delTempPWFiles)\n  openssl.spawnWrapper(params, false, function (error, code) {\n    function done (error) {\n      if (error) {\n        callback(error)\n      } else {\n        callback(null, code === 0)\n      }\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(error || fsErr)\n    })\n  })\n}\n\n/**\n * conversion from PFX to PEM\n * @param  {Object} pathIN  path of the PFX encoded certificate file\n * @param  {String} pathOUT path of the PEM encoded certificate file to generate\n * @param  {String} password password to set for accessing the PFX file\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.PFX2PEM = function (pathIN, pathOUT, password, callback) {\n  var params = [\n    'pkcs12',\n    '-in',\n    pathIN,\n    '-out',\n    pathOUT,\n    '-nodes'\n  ]\n  var delTempPWFiles = []\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'out' }, params, delTempPWFiles)\n  openssl.spawnWrapper(params, false, function (error, code) {\n    function done (error) {\n      if (error) {\n        callback(error)\n      } else {\n        callback(null, code === 0)\n      }\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(error || fsErr)\n    })\n  })\n}\n\n/**\n * conversion from P7B to PFX/PKCS#12\n * @param  {Object} pathBundleIN  paths of the PEM encoded certificate files ({cert: '...', key: '...', ca: '...' or ['...', ...]})\n * @param  {String} pathOUT path of the PFX certificate file to generate\n * @param  {String} password password to be set for the PFX file and to be used to access the key file\n * @param  {Function} callback callback method called with error, boolean result\n */\nmodule.exports.P7B2PFX = function (pathBundleIN, pathOUT, password, callback) {\n  var tmpfile = pathBundleIN.cert.replace(/\\.[^.]+$/, '.cer')\n  var params = [\n    'pkcs7',\n    '-print_certs',\n    '-in',\n    pathBundleIN.cert,\n    '-out',\n    tmpfile\n  ]\n  openssl.spawnWrapper(params, false, function (error, code) {\n    if (error) {\n      callback(error)\n    } else {\n      var params = [\n        'pkcs12',\n        '-export',\n        '-in',\n        tmpfile,\n        '-inkey',\n        pathBundleIN.key,\n        '-out',\n        pathOUT\n      ]\n      if (pathBundleIN.ca) {\n        if (!Array.isArray(pathBundleIN.ca)) {\n          pathBundleIN.ca = [pathBundleIN.ca]\n        }\n        pathBundleIN.ca.forEach(function (ca) {\n          params.push('-certfile')\n          params.push(ca)\n        })\n      }\n      var delTempPWFiles = [tmpfile]\n      helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n      helper.createPasswordFile({ cipher: '', password: password, passType: 'out' }, params, delTempPWFiles)\n      openssl.spawnWrapper(params, false, function (error, code) {\n        function done (error) {\n          if (error) {\n            callback(error)\n          } else {\n            callback(null, code === 0)\n          }\n        }\n        helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n          done(error || fsErr)\n        })\n      })\n    }\n  })\n}\n","'use strict'\n\n/**\n * pem module\n *\n * @module pem\n */\n\nconst { promisify } = require('es6-promisify')\nvar net = require('net')\nvar helper = require('./helper.js')\nvar openssl = require('./openssl.js')\n\nmodule.exports.createPrivateKey = createPrivateKey\nmodule.exports.createDhparam = createDhparam\nmodule.exports.createEcparam = createEcparam\nmodule.exports.createCSR = createCSR\nmodule.exports.createCertificate = createCertificate\nmodule.exports.readCertificateInfo = readCertificateInfo\nmodule.exports.getPublicKey = getPublicKey\nmodule.exports.getFingerprint = getFingerprint\nmodule.exports.getModulus = getModulus\nmodule.exports.getDhparamInfo = getDhparamInfo\nmodule.exports.createPkcs12 = createPkcs12\nmodule.exports.readPkcs12 = readPkcs12\nmodule.exports.verifySigningChain = verifySigningChain\nmodule.exports.checkCertificate = checkCertificate\nmodule.exports.checkPkcs12 = checkPkcs12\nmodule.exports.config = config\n\n/**\n * quick access the convert module\n * @type {module:convert}\n */\nmodule.exports.convert = require('./convert.js')\n\nvar KEY_START = '-----BEGIN PRIVATE KEY-----'\nvar KEY_END = '-----END PRIVATE KEY-----'\nvar RSA_KEY_START = '-----BEGIN RSA PRIVATE KEY-----'\nvar RSA_KEY_END = '-----END RSA PRIVATE KEY-----'\nvar ENCRYPTED_KEY_START = '-----BEGIN ENCRYPTED PRIVATE KEY-----'\nvar ENCRYPTED_KEY_END = '-----END ENCRYPTED PRIVATE KEY-----'\nvar CERT_START = '-----BEGIN CERTIFICATE-----'\nvar CERT_END = '-----END CERTIFICATE-----'\n\n/**\n * Creates a private key\n *\n * @static\n * @param {Number} [keyBitsize=2048] Size of the key, defaults to 2048bit\n * @param {Object} [options] object of cipher and password {cipher:'aes128',password:'xxx'}, defaults empty object\n * @param {String} [options.cipher] string of the cipher for the encryption - needed with password\n * @param {String} [options.password] string of the cipher password for the encryption needed with cipher\n * @param {Function} callback Callback function with an error object and {key}\n */\nfunction createPrivateKey (keyBitsize, options, callback) {\n  if (!callback && !options && typeof keyBitsize === 'function') {\n    callback = keyBitsize\n    keyBitsize = undefined\n    options = {}\n  } else if (!callback && keyBitsize && typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  keyBitsize = Number(keyBitsize) || 2048\n\n  var params = ['genrsa']\n  var delTempPWFiles = []\n\n  if (options && options.cipher && (Number(helper.ciphers.indexOf(options.cipher)) !== -1) && options.password) {\n    helper.createPasswordFile({ cipher: options.cipher, password: options.password, passType: 'out' }, params, delTempPWFiles)\n  }\n\n  params.push(keyBitsize)\n\n  openssl.exec(params, 'RSA PRIVATE KEY', function (sslErr, key) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, {\n        key: key\n      })\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Creates a dhparam key\n *\n * @static\n * @param {Number} [keyBitsize=512] Size of the key, defaults to 512bit\n * @param {Function} callback Callback function with an error object and {dhparam}\n */\nfunction createDhparam (keyBitsize, callback) {\n  if (!callback && typeof keyBitsize === 'function') {\n    callback = keyBitsize\n    keyBitsize = undefined\n  }\n\n  keyBitsize = Number(keyBitsize) || 512\n\n  var params = ['dhparam',\n    '-outform',\n    'PEM',\n    keyBitsize\n  ]\n\n  openssl.exec(params, 'DH PARAMETERS', function (error, dhparam) {\n    if (error) {\n      return callback(error)\n    }\n    return callback(null, {\n      dhparam: dhparam\n    })\n  })\n}\n\n/**\n * Creates a ecparam key\n * @static\n * @param {String} [keyName=secp256k1] Name of the key, defaults to secp256k1\n * @param {String} [paramEnc=explicit] Encoding of the elliptic curve parameters, defaults to explicit\n * @param {Boolean} [noOut=false] This option inhibits the output of the encoded version of the parameters.\n * @param {Function} callback Callback function with an error object and {ecparam}\n */\nfunction createEcparam (keyName, paramEnc, noOut, callback) {\n  if (!callback && typeof noOut === 'undefined' && !paramEnc && typeof keyName === 'function') {\n    callback = keyName\n    keyName = undefined\n  } else if (!callback && typeof noOut === 'undefined' && keyName && typeof paramEnc === 'function') {\n    callback = paramEnc\n    paramEnc = undefined\n  } else if (!callback && typeof noOut === 'function' && keyName && paramEnc) {\n    callback = noOut\n    noOut = undefined\n  }\n\n  keyName = keyName || 'secp256k1'\n  paramEnc = paramEnc || 'explicit'\n  noOut = noOut || false\n\n  var params = ['ecparam',\n    '-name',\n    keyName,\n    '-genkey',\n    '-param_enc',\n    paramEnc\n  ]\n\n  var searchString = 'EC PARAMETERS'\n  if (noOut) {\n    params.push('-noout')\n    searchString = 'EC PRIVATE KEY'\n  }\n\n  openssl.exec(params, searchString, function (error, ecparam) {\n    if (error) {\n      return callback(error)\n    }\n    return callback(null, {\n      ecparam: ecparam\n    })\n  })\n}\n\n/**\n * Creates a Certificate Signing Request\n * If client key is undefined, a new key is created automatically. The used key is included\n * in the callback return as clientKey\n * @static\n * @param {Object} [options] Optional options object\n * @param {String} [options.clientKey] Optional client key to use\n * @param {Number} [options.keyBitsize] If clientKey is undefined, bit size to use for generating a new key (defaults to 2048)\n * @param {String} [options.hash] Hash function to use (either md5 sha1 or sha256, defaults to sha256)\n * @param {String} [options.country] CSR country field\n * @param {String} [options.state] CSR state field\n * @param {String} [options.locality] CSR locality field\n * @param {String} [options.organization] CSR organization field\n * @param {String} [options.organizationUnit] CSR organizational unit field\n * @param {String} [options.commonName='localhost'] CSR common name field\n * @param {String} [options.emailAddress] CSR email address field\n * @param {String} [options.csrConfigFile] CSR config file\n * @param {Array}  [options.altNames] is a list of subjectAltNames in the subjectAltName field\n * @param {Function} callback Callback function with an error object and {csr, clientKey}\n */\nfunction createCSR (options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = undefined\n  }\n\n  options = options || {}\n\n  // http://stackoverflow.com/questions/14089872/why-does-node-js-accept-ip-addresses-in-certificates-only-for-san-not-for-cn\n  if (options.commonName && (net.isIPv4(options.commonName) || net.isIPv6(options.commonName))) {\n    if (!options.altNames) {\n      options.altNames = [options.commonName]\n    } else if (options.altNames.indexOf(options.commonName) === -1) {\n      options.altNames = options.altNames.concat([options.commonName])\n    }\n  }\n\n  if (!options.clientKey) {\n    createPrivateKey(options.keyBitsize || 2048, function (error, keyData) {\n      if (error) {\n        return callback(error)\n      }\n      options.clientKey = keyData.key\n      createCSR(options, callback)\n    })\n    return\n  }\n\n  var params = ['req',\n    '-new',\n    '-' + (options.hash || 'sha256')\n  ]\n\n  if (options.csrConfigFile) {\n    params.push('-config')\n    params.push(options.csrConfigFile)\n  } else {\n    params.push('-subj')\n    params.push(generateCSRSubject(options))\n  }\n\n  params.push('-key')\n  params.push('--TMPFILE--')\n\n  var tmpfiles = [options.clientKey]\n  var config = null\n\n  if (options.altNames && Array.isArray(options.altNames) && options.altNames.length) {\n    params.push('-extensions')\n    params.push('v3_req')\n    params.push('-config')\n    params.push('--TMPFILE--')\n    var altNamesRep = []\n    for (var i = 0; i < options.altNames.length; i++) {\n      altNamesRep.push((net.isIP(options.altNames[i]) ? 'IP' : 'DNS') + '.' + (i + 1) + ' = ' + options.altNames[i])\n    }\n\n    tmpfiles.push(config = [\n      '[req]',\n      'req_extensions = v3_req',\n      'distinguished_name = req_distinguished_name',\n      '[v3_req]',\n      'subjectAltName = @alt_names',\n      '[alt_names]',\n      altNamesRep.join('\\n'),\n      '[req_distinguished_name]',\n      'commonName = Common Name',\n      'commonName_max = 64'\n    ].join('\\n'))\n  } else if (options.config) {\n    config = options.config\n  }\n\n  var delTempPWFiles = []\n  if (options.clientKeyPassword) {\n    helper.createPasswordFile({ cipher: '', password: options.clientKeyPassword, passType: 'in' }, params, delTempPWFiles)\n  }\n\n  openssl.exec(params, 'CERTIFICATE REQUEST', tmpfiles, function (sslErr, data) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, {\n        csr: data,\n        config: config,\n        clientKey: options.clientKey\n      })\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Creates a certificate based on a CSR. If CSR is not defined, a new one\n * will be generated automatically. For CSR generation all the options values\n * can be used as with createCSR.\n * @static\n * @param {Object} [options] Optional options object\n * @param {String} [options.serviceCertificate] PEM encoded certificate\n * @param {String} [options.serviceKey] Private key for signing the certificate, if not defined a new one is generated\n * @param {String} [options.serviceKeyPassword] Password of the service key\n * @param {Boolean} [options.selfSigned] If set to true and serviceKey is not defined, use clientKey for signing\n * @param {String|Number} [options.serial] Set a serial max. 20 octets - only together with options.serviceCertificate\n * @param {String} [options.serialFile] Set the name of the serial file, without extension. - only together with options.serviceCertificate and never in tandem with options.serial\n * @param {String} [options.hash] Hash function to use (either md5 sha1 or sha256, defaults to sha256)\n * @param {String} [options.csr] CSR for the certificate, if not defined a new one is generated\n * @param {Number} [options.days] Certificate expire time in days\n * @param {String} [options.clientKeyPassword] Password of the client key\n * @param {String} [options.extFile] extension config file - without '-extensions v3_req'\n * @param {String} [options.config] extension config file - with '-extensions v3_req'\n * @param {String} [options.csrConfigFile] CSR config file - only used if no options.csr is provided\n * @param {Array}  [options.altNames] is a list of subjectAltNames in the subjectAltName field - only used if no options.csr is provided\n * @param {Function} callback Callback function with an error object and {certificate, csr, clientKey, serviceKey}\n */\nfunction createCertificate (options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = undefined\n  }\n\n  options = options || {}\n\n  if (!options.csr) {\n    createCSR(options, function (error, keyData) {\n      if (error) {\n        return callback(error)\n      }\n      options.csr = keyData.csr\n      options.config = keyData.config\n      options.clientKey = keyData.clientKey\n      createCertificate(options, callback)\n    })\n    return\n  }\n\n  if (!options.clientKey) {\n    options.clientKey = ''\n  }\n\n  if (!options.serviceKey) {\n    if (options.selfSigned) {\n      options.serviceKey = options.clientKey\n    } else {\n      createPrivateKey(options.keyBitsize || 2048, function (error, keyData) {\n        if (error) {\n          return callback(error)\n        }\n        options.serviceKey = keyData.key\n        createCertificate(options, callback)\n      })\n      return\n    }\n  }\n\n  readCertificateInfo(options.csr, function (error2, data2) {\n    if (error2) {\n      return callback(error2)\n    }\n\n    var params = ['x509',\n      '-req',\n      '-' + (options.hash || 'sha256'),\n      '-days',\n      Number(options.days) || '365',\n      '-in',\n      '--TMPFILE--'\n    ]\n    var tmpfiles = [options.csr]\n    var delTempPWFiles = []\n\n    if (options.serviceCertificate) {\n      params.push('-CA')\n      params.push('--TMPFILE--')\n      params.push('-CAkey')\n      params.push('--TMPFILE--')\n      if (options.serial) {\n        params.push('-set_serial')\n        if (helper.isNumber(options.serial)) {\n        // set the serial to the max lenth of 20 octets ()\n        // A certificate serial number is not decimal conforming. That is the\n        // bytes in a serial number do not necessarily map to a printable ASCII\n        // character.\n        // eg: 0x00 is a valid serial number and can not be represented in a\n        // human readable format (atleast one that can be directly mapped to\n        // the ACSII table).\n          params.push('0x' + ('0000000000000000000000000000000000000000' + options.serial.toString(16)).slice(-40))\n        } else {\n          if (helper.isHex(options.serial)) {\n            if (options.serial.startsWith('0x')) {\n              options.serial = options.serial.substring(2, options.serial.length)\n            }\n            params.push('0x' + ('0000000000000000000000000000000000000000' + options.serial).slice(-40))\n          } else {\n            params.push('0x' + ('0000000000000000000000000000000000000000' + helper.toHex(options.serial)).slice(-40))\n          }\n        }\n      } else {\n        params.push('-CAcreateserial')\n        if (options.serialFile) {\n          params.push('-CAserial')\n          params.push(options.serialFile + '.srl')\n        }\n      }\n      if (options.serviceKeyPassword) {\n        helper.createPasswordFile({ cipher: '', password: options.serviceKeyPassword, passType: 'in' }, params, delTempPWFiles)\n      }\n      tmpfiles.push(options.serviceCertificate)\n      tmpfiles.push(options.serviceKey)\n    } else {\n      params.push('-signkey')\n      params.push('--TMPFILE--')\n      if (options.serviceKeyPassword) {\n        helper.createPasswordFile({ cipher: '', password: options.serviceKeyPassword, passType: 'in' }, params, delTempPWFiles)\n      }\n      tmpfiles.push(options.serviceKey)\n    }\n\n    if (options.config) {\n      params.push('-extensions')\n      params.push('v3_req')\n      params.push('-extfile')\n      params.push('--TMPFILE--')\n      tmpfiles.push(options.config)\n    } else if (options.extFile) {\n      params.push('-extfile')\n      params.push(options.extFile)\n    } else {\n      var altNamesRep = []\n      if (data2 && data2.san) {\n        for (var i = 0; i < data2.san.dns.length; i++) {\n          altNamesRep.push('DNS' + '.' + (i + 1) + ' = ' + data2.san.dns[i])\n        }\n        for (var i2 = 0; i2 < data2.san.ip.length; i2++) {\n          altNamesRep.push('IP' + '.' + (i2 + 1) + ' = ' + data2.san.ip[i2])\n        }\n        for (var i3 = 0; i3 < data2.san.email.length; i3++) {\n          altNamesRep.push('email' + '.' + (i3 + 1) + ' = ' + data2.san.email[i3])\n        }\n        params.push('-extensions')\n        params.push('v3_req')\n        params.push('-extfile')\n        params.push('--TMPFILE--')\n        tmpfiles.push([\n          '[v3_req]',\n          'subjectAltName = @alt_names',\n          '[alt_names]',\n          altNamesRep.join('\\n')\n        ].join('\\n'))\n      }\n    }\n\n    if (options.clientKeyPassword) {\n      helper.createPasswordFile({ cipher: '', password: options.clientKeyPassword, passType: 'in' }, params, delTempPWFiles)\n    }\n\n    openssl.exec(params, 'CERTIFICATE', tmpfiles, function (sslErr, data) {\n      function done (err) {\n        if (err) {\n          return callback(err)\n        }\n        var response = {\n          csr: options.csr,\n          clientKey: options.clientKey,\n          certificate: data,\n          serviceKey: options.serviceKey\n        }\n        return callback(null, response)\n      }\n\n      helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n        done(sslErr || fsErr)\n      })\n    })\n  })\n}\n\n/**\n * Exports a public key from a private key, CSR or certificate\n * @static\n * @param {String} certificate PEM encoded private key, CSR or certificate\n * @param {Function} callback Callback function with an error object and {publicKey}\n */\nfunction getPublicKey (certificate, callback) {\n  if (!callback && typeof certificate === 'function') {\n    callback = certificate\n    certificate = undefined\n  }\n\n  certificate = (certificate || '').toString()\n\n  var params\n\n  if (certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)) {\n    params = ['req',\n      '-in',\n      '--TMPFILE--',\n      '-pubkey',\n      '-noout'\n    ]\n  } else if (certificate.match(/BEGIN RSA PRIVATE KEY/) || certificate.match(/BEGIN PRIVATE KEY/)) {\n    params = ['rsa',\n      '-in',\n      '--TMPFILE--',\n      '-pubout'\n    ]\n  } else {\n    params = ['x509',\n      '-in',\n      '--TMPFILE--',\n      '-pubkey',\n      '-noout'\n    ]\n  }\n\n  openssl.exec(params, 'PUBLIC KEY', certificate, function (error, key) {\n    if (error) {\n      return callback(error)\n    }\n    return callback(null, {\n      publicKey: key\n    })\n  })\n}\n\n/**\n * Reads subject data from a certificate or a CSR\n * @static\n * @param {String} certificate PEM encoded CSR or certificate\n * @param {Function} callback Callback function with an error object and {country, state, locality, organization, organizationUnit, commonName, emailAddress}\n */\nfunction readCertificateInfo (certificate, callback) {\n  if (!callback && typeof certificate === 'function') {\n    callback = certificate\n    certificate = undefined\n  }\n\n  certificate = (certificate || '').toString()\n  var isMatch = certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)\n  var type = isMatch ? 'req' : 'x509'\n  var params = [type,\n    '-noout',\n    '-nameopt',\n    'RFC2253,sep_multiline,space_eq,-esc_msb,utf8',\n    '-text',\n    '-in',\n    '--TMPFILE--'\n  ]\n  openssl.spawnWrapper(params, certificate, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    } else if (stderr) {\n      return callback(stderr)\n    }\n    return fetchCertificateData(stdout, callback)\n  })\n}\n\n/**\n * get the modulus from a certificate, a CSR or a private key\n * @static\n * @param {String} certificate PEM encoded, CSR PEM encoded, or private key\n * @param {String} [password] password for the certificate\n * @param {String} [hash] hash function to use (up to now `md5` supported) (default: none)\n * @param {Function} callback Callback function with an error object and {modulus}\n */\nfunction getModulus (certificate, password, hash, callback) {\n  if (!callback && !hash && typeof password === 'function') {\n    callback = password\n    password = undefined\n    hash = false\n  } else if (!callback && hash && typeof hash === 'function') {\n    callback = hash\n    hash = false\n    // password will be falsy if not provided\n  }\n  // adding hash function to params, is not supported by openssl.\n  // process piping would be the right way (... | openssl md5)\n  // No idea how this can be achieved in easy with the current build in methods\n  // of pem.\n  if (hash && hash !== 'md5') {\n    hash = false\n  }\n\n  certificate = (Buffer.isBuffer(certificate) && certificate.toString()) || certificate\n\n  var type = ''\n  if (certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)) {\n    type = 'req'\n  } else if (certificate.match(/BEGIN RSA PRIVATE KEY/) || certificate.match(/BEGIN PRIVATE KEY/)) {\n    type = 'rsa'\n  } else {\n    type = 'x509'\n  }\n  var params = [\n    type,\n    '-noout',\n    '-modulus',\n    '-in',\n    '--TMPFILE--'\n  ]\n  var delTempPWFiles = []\n  if (password) {\n    helper.createPasswordFile({ cipher: '', password: password, passType: 'in' }, params, delTempPWFiles)\n  }\n\n  openssl.spawnWrapper(params, certificate, function (sslErr, code, stdout, stderr) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      var match = stdout.match(/Modulus=([0-9a-fA-F]+)$/m)\n      if (match) {\n        return callback(null, {\n          modulus: hash ? require(hash)(match[1]) : match[1]\n        })\n      } else {\n        return callback(new Error('No modulus'))\n      }\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr || stderr)\n    })\n  })\n}\n\n/**\n * get the size and prime of DH parameters\n * @static\n * @param {String} DH parameters PEM encoded\n * @param {Function} callback Callback function with an error object and {size, prime}\n */\nfunction getDhparamInfo (dh, callback) {\n  dh = (Buffer.isBuffer(dh) && dh.toString()) || dh\n\n  var params = [\n    'dhparam',\n    '-text',\n    '-in',\n    '--TMPFILE--'\n  ]\n\n  openssl.spawnWrapper(params, dh, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    } else if (stderr) {\n      return callback(stderr)\n    }\n\n    var result = {}\n    var match = stdout.match(/Parameters: \\((\\d+) bit\\)/)\n\n    if (match) {\n      result.size = Number(match[1])\n    }\n\n    var prime = ''\n    stdout.split('\\n').forEach(function (line) {\n      if (/\\s+([0-9a-f][0-9a-f]:)+[0-9a-f]?[0-9a-f]?/g.test(line)) {\n        prime += line.trim()\n      }\n    })\n\n    if (prime) {\n      result.prime = prime\n    }\n\n    if (!match && !prime) {\n      return callback(new Error('No DH info found'))\n    }\n\n    return callback(null, result)\n  })\n}\n\n/**\n * config the pem module\n * @static\n * @param {Object} options\n */\nfunction config (options) {\n  Object.keys(options).forEach(function (k) {\n    openssl.set(k, options[k])\n  })\n}\n\n/**\n * Gets the fingerprint for a certificate\n * @static\n * @param {String} PEM encoded certificate\n * @param {String} [hash] hash function to use (either `md5`, `sha1` or `sha256`, defaults to `sha1`)\n * @param {Function} callback Callback function with an error object and {fingerprint}\n */\nfunction getFingerprint (certificate, hash, callback) {\n  if (!callback && typeof hash === 'function') {\n    callback = hash\n    hash = undefined\n  }\n\n  hash = hash || 'sha1'\n\n  var params = ['x509',\n    '-in',\n    '--TMPFILE--',\n    '-fingerprint',\n    '-noout',\n    '-' + hash\n  ]\n\n  openssl.spawnWrapper(params, certificate, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    } else if (stderr) {\n      return callback(stderr)\n    }\n    var match = stdout.match(/Fingerprint=([0-9a-fA-F:]+)$/m)\n    if (match) {\n      return callback(null, {\n        fingerprint: match[1]\n      })\n    } else {\n      return callback(new Error('No fingerprint'))\n    }\n  })\n}\n\n/**\n * Export private key and certificate to a PKCS12 keystore\n * @static\n * @param {String} PEM encoded private key\n * @param {String} PEM encoded certificate\n * @param {String} Password of the result PKCS12 file\n * @param {Object} [options] object of cipher and optional client key password {cipher:'aes128', clientKeyPassword: 'xxxx', certFiles: ['file1','file2']}\n * @param {Function} callback Callback function with an error object and {pkcs12}\n */\nfunction createPkcs12 (key, certificate, password, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  var params = ['pkcs12', '-export']\n  var delTempPWFiles = []\n\n  if (options.cipher && options.clientKeyPassword) {\n    // NOTICE: The password field is needed! self if it is empty.\n    // create password file for the import \"-passin\"\n    helper.createPasswordFile({ cipher: options.cipher, password: options.clientKeyPassword, passType: 'in' }, params, delTempPWFiles)\n  }\n  // NOTICE: The password field is needed! self if it is empty.\n  // create password file for the password \"-password\"\n  helper.createPasswordFile({ cipher: '', password: password, passType: 'word' }, params, delTempPWFiles)\n\n  params.push('-in')\n  params.push('--TMPFILE--')\n  params.push('-inkey')\n  params.push('--TMPFILE--')\n\n  var tmpfiles = [certificate, key]\n\n  if (options.certFiles) {\n    tmpfiles.push(options.certFiles.join(''))\n\n    params.push('-certfile')\n    params.push('--TMPFILE--')\n  }\n\n  openssl.execBinary(params, tmpfiles, function (sslErr, pkcs12) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      return callback(null, {\n        pkcs12: pkcs12\n      })\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * read sslcert data from Pkcs12 file. Results are provided in callback response in object notation ({cert: .., ca:..., key:...})\n * @static\n * @param  {Buffer|String}   bufferOrPath Buffer or path to file\n * @param  {Object}   [options]      openssl options\n * @param  {Function} callback     Called with error object and sslcert bundle object\n */\nfunction readPkcs12 (bufferOrPath, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options.p12Password = options.p12Password || ''\n\n  var tmpfiles = []\n  var delTempPWFiles = []\n  var args = ['pkcs12', '-in', bufferOrPath]\n\n  helper.createPasswordFile({ cipher: '', password: options.p12Password, passType: 'in' }, args, delTempPWFiles)\n\n  if (Buffer.isBuffer(bufferOrPath)) {\n    tmpfiles = [bufferOrPath]\n    args[2] = '--TMPFILE--'\n  }\n\n  if (options.clientKeyPassword) {\n    helper.createPasswordFile({ cipher: '', password: options.clientKeyPassword, passType: 'out' }, args, delTempPWFiles)\n  } else {\n    args.push('-nodes')\n  }\n\n  openssl.execBinary(args, tmpfiles, function (sslErr, stdout) {\n    function done (err) {\n      var keybundle = {}\n\n      if (err && err.message.indexOf('No such file or directory') !== -1) {\n        err.code = 'ENOENT'\n      }\n\n      if (!err) {\n        var certs = readFromString(stdout, CERT_START, CERT_END)\n        keybundle.cert = certs.shift()\n        keybundle.ca = certs\n        keybundle.key = readFromString(stdout, KEY_START, KEY_END).pop()\n\n        if (keybundle.key) {\n        // convert to RSA key\n          return openssl.exec(['rsa', '-in', '--TMPFILE--'], 'RSA PRIVATE KEY', [keybundle.key], function (err, key) {\n            keybundle.key = key\n\n            return callback(err, keybundle)\n          })\n        }\n\n        if (options.clientKeyPassword) {\n          keybundle.key = readFromString(stdout, ENCRYPTED_KEY_START, ENCRYPTED_KEY_END).pop()\n        } else {\n          keybundle.key = readFromString(stdout, RSA_KEY_START, RSA_KEY_END).pop()\n        }\n      }\n\n      return callback(err, keybundle)\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Check a certificate\n * @static\n * @param {String} PEM encoded certificate\n * @param {String} [passphrase] password for the certificate\n * @param {Function} callback Callback function with an error object and a boolean valid\n */\nfunction checkCertificate (certificate, passphrase, callback) {\n  var params\n  var delTempPWFiles = []\n\n  if (!callback && typeof passphrase === 'function') {\n    callback = passphrase\n    passphrase = undefined\n  }\n  certificate = (certificate || '').toString()\n\n  if (certificate.match(/BEGIN(\\sNEW)? CERTIFICATE REQUEST/)) {\n    params = ['req', '-text', '-noout', '-verify', '-in', '--TMPFILE--']\n  } else if (certificate.match(/BEGIN RSA PRIVATE KEY/) || certificate.match(/BEGIN PRIVATE KEY/)) {\n    params = ['rsa', '-noout', '-check', '-in', '--TMPFILE--']\n  } else {\n    params = ['x509', '-text', '-noout', '-in', '--TMPFILE--']\n  }\n  if (passphrase) {\n    helper.createPasswordFile({ cipher: '', password: passphrase, passType: 'in' }, params, delTempPWFiles)\n  }\n\n  openssl.spawnWrapper(params, certificate, function (sslErr, code, stdout, stderr) {\n    function done (err) {\n      if (err && err.toString().trim() !== 'verify OK') {\n        return callback(err)\n      }\n      var result\n      switch (params[0]) {\n        case 'rsa':\n          result = /^Rsa key ok$/i.test(stdout.trim())\n          break\n        default:\n          result = /Signature Algorithm/im.test(stdout)\n          break\n      }\n\n      callback(null, result)\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr || stderr)\n    })\n  })\n}\n\n/**\n * check a PKCS#12 file (.pfx or.p12)\n * @static\n * @param {Buffer|String} bufferOrPath PKCS#12 certificate\n * @param {String} [passphrase] optional passphrase which will be used to open the keystore\n * @param {Function} callback Callback function with an error object and a boolean valid\n */\nfunction checkPkcs12 (bufferOrPath, passphrase, callback) {\n  if (!callback && typeof passphrase === 'function') {\n    callback = passphrase\n    passphrase = ''\n  }\n\n  var tmpfiles = []\n  var delTempPWFiles = []\n  var args = ['pkcs12', '-info', '-in', bufferOrPath, '-noout', '-maciter', '-nodes']\n\n  helper.createPasswordFile({ cipher: '', password: passphrase, passType: 'in' }, args, delTempPWFiles)\n\n  if (Buffer.isBuffer(bufferOrPath)) {\n    tmpfiles = [bufferOrPath]\n    args[3] = '--TMPFILE--'\n  }\n\n  openssl.spawnWrapper(args, tmpfiles, function (sslErr, code, stdout, stderr) {\n    function done (err) {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, (/MAC verified OK/im.test(stderr) || (!(/MAC verified OK/im.test(stderr)) && !(/Mac verify error/im.test(stderr)))))\n    }\n    helper.deleteTempFiles(delTempPWFiles, function (fsErr) {\n      done(sslErr || fsErr)\n    })\n  })\n}\n\n/**\n * Verifies the signing chain of the passed certificate\n * @static\n * @param {String|Array} PEM encoded certificate include intermediate certificates\n * @param {String|Array} [List] of CA certificates\n * @param {Function} callback Callback function with an error object and a boolean valid\n */\nfunction verifySigningChain (certificate, ca, callback) {\n  if (!callback && typeof ca === 'function') {\n    callback = ca\n    ca = undefined\n  }\n  if (!Array.isArray(certificate)) {\n    certificate = [certificate]\n  }\n  if (!Array.isArray(ca) && ca !== undefined) {\n    if (ca !== '') {\n      ca = [ca]\n    }\n  }\n\n  var files = []\n\n  if (ca !== undefined) {\n    // ca certificates\n    files.push(ca.join('\\n'))\n  }\n  // certificate incl. intermediate certificates\n  files.push(certificate.join('\\n'))\n\n  var params = ['verify']\n\n  if (ca !== undefined) {\n    // ca certificates\n    params.push('-CAfile')\n    params.push('--TMPFILE--')\n  }\n  // certificate incl. intermediate certificates\n  params.push('--TMPFILE--')\n\n  openssl.spawnWrapper(params, files, function (err, code, stdout, stderr) {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, stdout.trim().slice(-4) === ': OK')\n  })\n}\n\n// HELPER FUNCTIONS\nfunction fetchCertificateData (certData, callback) {\n  // try catch : if something will fail in parsing it won't crash the calling code\n  try {\n    certData = (certData || '').toString()\n\n    var serial, subject, tmp, issuer\n    var certValues = {\n      issuer: {}\n    }\n    var validity = {}\n    var san\n\n    var ky, i\n\n    // serial\n    if ((serial = certData.match(/\\s*Serial Number:\\r?\\n?\\s*([^\\r\\n]*)\\r?\\n\\s*\\b/)) && serial.length > 1) {\n      certValues.serial = serial[1]\n    }\n\n    if ((subject = certData.match(/\\s*Subject:\\r?\\n(\\s*(([a-zA-Z0-9.]+)\\s=\\s[^\\r\\n]+\\r?\\n))*\\s*\\b/)) && subject.length > 1) {\n      subject = subject[0]\n      tmp = matchAll(subject, /\\s([a-zA-Z0-9.]+)\\s=\\s([^\\r\\n].*)/g)\n      if (tmp) {\n        for (i = 0; i < tmp.length; i++) {\n          ky = tmp[i][1].trim()\n          if (ky.match('(C|ST|L|O|OU|CN|emailAddress|DC)') || ky === '') {\n            continue\n          }\n          certValues[ky] = tmp[i][2].trim()\n        }\n      }\n\n      // country\n      tmp = subject.match(/\\sC\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.country = (tmp && tmp[1]) || ''\n\n      // state\n      tmp = subject.match(/\\sST\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.state = (tmp && tmp[1]) || ''\n\n      // locality\n      tmp = subject.match(/\\sL\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.locality = (tmp && tmp[1]) || ''\n\n      // organization\n      tmp = matchAll(subject, /\\sO\\s=\\s([^\\r\\n].*)/g)\n      certValues.organization = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // unit\n      tmp = matchAll(subject, /\\sOU\\s=\\s([^\\r\\n].*)/g)\n      certValues.organizationUnit = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // common name\n      tmp = matchAll(subject, /\\sCN\\s=\\s([^\\r\\n].*)/g)\n      certValues.commonName = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // email\n      tmp = matchAll(subject, /emailAddress\\s=\\s([^\\r\\n].*)/g)\n      certValues.emailAddress = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // DC name\n      tmp = matchAll(subject, /\\sDC\\s=\\s([^\\r\\n].*)/g)\n      certValues.dc = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n    }\n\n    if ((issuer = certData.match(/\\s*Issuer:\\r?\\n(\\s*([a-zA-Z0-9.]+)\\s=\\s[^\\r\\n].*\\r?\\n)*\\s*\\b/)) && issuer.length > 1) {\n      issuer = issuer[0]\n      tmp = matchAll(issuer, /\\s([a-zA-Z0-9.]+)\\s=\\s([^\\r\\n].*)/g)\n      for (i = 0; i < tmp.length; i++) {\n        ky = tmp[i][1].toString()\n        if (ky.match('(C|ST|L|O|OU|CN|emailAddress|DC)')) {\n          continue\n        }\n        certValues.issuer[ky] = tmp[i][2].toString()\n      }\n\n      // country\n      tmp = issuer.match(/\\sC\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.issuer.country = (tmp && tmp[1]) || ''\n\n      // state\n      tmp = issuer.match(/\\sST\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.issuer.state = (tmp && tmp[1]) || ''\n\n      // locality\n      tmp = issuer.match(/\\sL\\s=\\s([^\\r\\n].*?)[\\r\\n]/)\n      certValues.issuer.locality = (tmp && tmp[1]) || ''\n\n      // organization\n      tmp = matchAll(issuer, /\\sO\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.organization = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // unit\n      tmp = matchAll(issuer, /\\sOU\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.organizationUnit = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var\n          r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // common name\n      tmp = matchAll(issuer, /\\sCN\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.commonName = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var\n          r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n\n      // DC name\n      tmp = matchAll(issuer, /\\sDC\\s=\\s([^\\r\\n].*)/g)\n      certValues.issuer.dc = tmp ? (tmp.length > 1 ? tmp.sort(function (t, n) {\n        var e = t[1].toUpperCase()\n        var\n          r = n[1].toUpperCase()\n        return r > e ? -1 : e > r ? 1 : 0\n      }).sort(function (t, n) {\n        return t[1].length - n[1].length\n      }).map(function (t) {\n        return t[1]\n      }) : tmp[0][1]) : ''\n    }\n\n    // SAN\n    if ((san = certData.match(/X509v3 Subject Alternative Name: \\r?\\n([^\\r\\n]*)\\r?\\n/)) && san.length > 1) {\n      san = san[1].trim() + '\\n'\n      certValues.san = {}\n\n      // hostnames\n      tmp = pregMatchAll('DNS:([^,\\\\r\\\\n].*?)[,\\\\r\\\\n\\\\s]', san)\n      certValues.san.dns = tmp || ''\n\n      // IP-Addresses IPv4 & IPv6\n      tmp = pregMatchAll('IP Address:([^,\\\\r\\\\n].*?)[,\\\\r\\\\n\\\\s]', san)\n      certValues.san.ip = tmp || ''\n\n      // Email Addresses\n      tmp = pregMatchAll('email:([^,\\\\r\\\\n].*?)[,\\\\r\\\\n\\\\s]', san)\n      certValues.san.email = tmp || ''\n    }\n\n    // Validity\n    if ((tmp = certData.match(/Not Before\\s?:\\s?([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      validity.start = Date.parse((tmp && tmp[1]) || '')\n    }\n\n    if ((tmp = certData.match(/Not After\\s?:\\s?([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      validity.end = Date.parse((tmp && tmp[1]) || '')\n    }\n\n    if (validity.start && validity.end) {\n      certValues.validity = validity\n    }\n    // Validity end\n\n    // Signature Algorithm\n    if ((tmp = certData.match(/Signature Algorithm: ([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      certValues.signatureAlgorithm = (tmp && tmp[1]) || ''\n    }\n\n    // Public Key\n    if ((tmp = certData.match(/Public[ -]Key: ([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      certValues.publicKeySize = ((tmp && tmp[1]) || '').replace(/[()]/g, '')\n    }\n\n    // Public Key Algorithm\n    if ((tmp = certData.match(/Public Key Algorithm: ([^\\r\\n]*)\\r?\\n/)) && tmp.length > 1) {\n      certValues.publicKeyAlgorithm = (tmp && tmp[1]) || ''\n    }\n\n    callback(null, certValues)\n  } catch (err) {\n    callback(err)\n  }\n}\n\nfunction matchAll (str, regexp) {\n  var matches = []\n  str.replace(regexp, function () {\n    var arr = ([]).slice.call(arguments, 0)\n    var extras = arr.splice(-2)\n    arr.index = extras[0]\n    arr.input = extras[1]\n    matches.push(arr)\n  })\n  return matches.length ? matches : null\n}\n\nfunction pregMatchAll (regex, haystack) {\n  var globalRegex = new RegExp(regex, 'g')\n  var globalMatch = haystack.match(globalRegex) || []\n  var matchArray = []\n  var nonGlobalRegex, nonGlobalMatch\n  for (var i = 0; i < globalMatch.length; i++) {\n    nonGlobalRegex = new RegExp(regex)\n    nonGlobalMatch = globalMatch[i].match(nonGlobalRegex)\n    matchArray.push(nonGlobalMatch[1])\n  }\n  return matchArray\n}\n\nfunction generateCSRSubject (options) {\n  options = options || {}\n\n  var csrData = {\n    C: options.country || options.C,\n    ST: options.state || options.ST,\n    L: options.locality || options.L,\n    O: options.organization || options.O,\n    OU: options.organizationUnit || options.OU,\n    CN: options.commonName || options.CN || 'localhost',\n    DC: options.dc || options.DC || '',\n    emailAddress: options.emailAddress\n  }\n\n  var csrBuilder = Object.keys(csrData).map(function (key) {\n    if (csrData[key]) {\n      if (typeof csrData[key] === 'object' && csrData[key].length >= 1) {\n        var tmpStr = ''\n        csrData[key].map(function (o) {\n          tmpStr += '/' + key + '=' + o.replace(/[^\\w .*\\-,@']+/g, ' ').trim()\n        })\n        return tmpStr\n      } else {\n        return '/' + key + '=' + csrData[key].replace(/[^\\w .*\\-,@']+/g, ' ').trim()\n      }\n    }\n  })\n\n  return csrBuilder.join('')\n}\n\nfunction readFromString (string, start, end) {\n  if (Buffer.isBuffer(string)) {\n    string = string.toString('utf8')\n  }\n\n  var output = []\n\n  if (!string) {\n    return output\n  }\n\n  var offset = string.indexOf(start)\n\n  while (offset !== -1) {\n    string = string.substring(offset)\n\n    var endOffset = string.indexOf(end)\n\n    if (endOffset === -1) {\n      break\n    }\n\n    endOffset += end.length\n\n    output.push(string.substring(0, endOffset))\n    offset = string.indexOf(start, endOffset)\n  }\n\n  return output\n}\n\n// promisify not tested yet\n/**\n * Verifies the signing chain of the passed certificate\n * @namespace\n * @name promisified\n * @property {function}  createPrivateKey               @see createPrivateKey\n * @property {function}  createDhparam       - The default number of players.\n * @property {function}  createEcparam         - The default level for the party.\n * @property {function}  createCSR      - The default treasure.\n * @property {function}  createCertificate - How much gold the party starts with.\n */\nmodule.exports.promisified = {\n  createPrivateKey: promisify(createPrivateKey),\n  createDhparam: promisify(createDhparam),\n  createEcparam: promisify(createEcparam),\n  createCSR: promisify(createCSR),\n  createCertificate: promisify(createCertificate),\n  readCertificateInfo: promisify(readCertificateInfo),\n  getPublicKey: promisify(getPublicKey),\n  getFingerprint: promisify(getFingerprint),\n  getModulus: promisify(getModulus),\n  getDhparamInfo: promisify(getDhparamInfo),\n  createPkcs12: promisify(createPkcs12),\n  readPkcs12: promisify(readPkcs12),\n  verifySigningChain: promisify(verifySigningChain),\n  checkCertificate: promisify(checkCertificate),\n  checkPkcs12: promisify(checkPkcs12)\n}\n"],"names":["promisify_1","promisify","customArgumentsToken","original","argumentNames","ES6Promise","_this","_len","args","_key","resolve","reject","err","_len2","values","_key2","o","value","index","name","isWindows","trailingSlashRe","osTmpdir","path","pathlib","require$$0","fs","require$$1","crypto","require$$2","require$$3","tempDir","module","str","hex","i","ciphers","options","params","PasswordFileArray","PasswordFile","files","callback","rmFiles","deleteSeries","list","finalCallback","file","myCallback","windows","isexe","sync","checkPathExt","pathext","p","checkStat","stat","cb","er","mode","checkMode","mod","uid","gid","myUid","myGid","u","g","ug","ret","core","global","isexe_1","is","COLON","getNotFoundError","cmd","getPathInfo","opt","colon","pathEnv","pathExtExe","pathExt","which","found","step","ppRaw","pathPart","pCmd","subStep","ii","ext","res","whichSync","j","cur","which_1","helper","cpspawn","require$$4","require$$5","require$$6","settings","set","option","get","exec","searchStr","tmpfiles","spawnWrapper","code","stdout","stderr","start","end","execBinary","spawn","binary","pathBin","testOpenSSLPath","openssl","data","needed","finished","done","delTempPWFiles","fpath","fsErr","error","text","tmp","convert","pathIN","pathOUT","type","pathBundleIN","ca","password","tmpfile","net","createPrivateKey_1","pem","createPrivateKey","createDhparam_1","createDhparam","createEcparam_1","createEcparam","createCSR_1","createCSR","createCertificate_1","createCertificate","readCertificateInfo_1","readCertificateInfo","getPublicKey_1","getPublicKey","getFingerprint_1","getFingerprint","getModulus_1","getModulus","getDhparamInfo_1","getDhparamInfo","createPkcs12_1","createPkcs12","readPkcs12_1","readPkcs12","verifySigningChain_1","verifySigningChain","checkCertificate_1","checkCertificate","checkPkcs12_1","checkPkcs12","config_1","config","KEY_START","KEY_END","RSA_KEY_START","RSA_KEY_END","ENCRYPTED_KEY_START","ENCRYPTED_KEY_END","CERT_START","CERT_END","keyBitsize","sslErr","key","dhparam","keyName","paramEnc","noOut","searchString","ecparam","keyData","generateCSRSubject","altNamesRep","error2","data2","i2","i3","response","certificate","isMatch","fetchCertificateData","hash","match","require","dh","result","prime","line","k","pkcs12","bufferOrPath","keybundle","certs","readFromString","passphrase","certData","serial","subject","issuer","certValues","validity","san","ky","matchAll","t","n","e","r","pregMatchAll","regexp","matches","arr","extras","regex","haystack","globalRegex","globalMatch","matchArray","nonGlobalRegex","nonGlobalMatch","csrData","csrBuilder","tmpStr","string","output","offset","endOffset","promisified"],"mappings":"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"}